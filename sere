#!/bin/sh
# sere
# Search and replace.

sere_main() {
	scriptpath="` realpath "$0" `"  
	scriptname="` basename "$scriptpath" `"
	scriptdir="` dirname "$scriptpath" `"

	e_args=16

	while getopts h opt
	do
		case $opt in
			h) sere_usage && return ;;
			*) _invalid_opt ;;
		esac
	done

	shift ` expr $OPTIND - 1 `

	[ -z "$cmd" ] && cmd="$1"
	shift

	[ -z "$cmd" ] && cmd="help"

	case "$cmd" in
		name|path|text)
			[ $# -lt 1 ] && _invalid_arg "Missing regular expression."
			REGEXP="$1"
			shift
			sere_process "$@"
			;;
		help|usage) sere_usage ;;
		*) _invalid_cmd ;;
	esac

	return $?
}

sere_name() {
	local inpath
	local dir
	local outname
	local outpath

	inpath="$1"

	dir="` dirname "$inpath" `"
	outname="` basename "$inpath" | sed -E "$REGEXP" `"
	[ "$dir" = "." ] && outpath="$outname" || outpath="$dir/$outname"

	_rename "$inpath" "$outpath"
}

sere_process() {
	[ $# -lt 1 ] && sere_process . && return

	local subfile

	for file in $@
	do
    if [ -d "$file" ]
    then
      find "$file" -type f ! -iname '.*' -print0 \
        | while IFS= read -r -d '' subfile
      do
      	"sere_$cmd" "$subfile"
      done
    else
      "sere_$cmd" "$file"
    fi
	done
}

sere_text() {
	local inpath

	inpath="$1"

	( file "$inpath" | sed -E 's/^.*: //g' | grep text 2>&1 > /dev/null ) || return

	sed -E -i '' -e "$REGEXP" "$inpath"
}

sere_usage() {
cat <<USAGE
Usage: $scriptname [mode] regexp [files]

Search and replace.

When no files are specify, all files found in current directory are used.

Available modes:

	help      Show this help screen.
	name      Change name of files using regexp.
	text      Search and replace text in files using regexp.

Available options:

	-h        Show this help screen.

USAGE
}

_echo() {
	echo "$@"
}

_error() {
	_echo "$@" >&2
}

_fatal() {
	local exit_code
	exit_code="$1"
	shift
	_error "$@"
	exit "$exit_code"
}

_invalid_arg() {
	_error "$@"
	_echo
	sere_usage
	exit $e_args
}

_invalid_cmd() {
	_error "Invalid command: $cmd"
	_echo
	sere_usage
	exit $e_args
}

_invalid_opt() {
	_error "Invalid option: $opt"
	_echo
	sere_usage
	exit $e_args
}

_rename() {
	local inpath
	local outpath

	inpath="$1"
	outpath="$2"

	[ "$inpath" = "$outpath" ] && return
	mv "$inpath" "$outpath"
}

sere_main "$@"
